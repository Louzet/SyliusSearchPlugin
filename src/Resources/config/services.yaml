parameters:
  monsieurbiz.search.model.documentable.interface: MonsieurBiz\SyliusSearchPlugin\Model\Documentable\DocumentableInterface
  monsieurbiz.search.request.interface: MonsieurBiz\SyliusSearchPlugin\Search\Request\RequestInterface

services:

  _defaults:
    autowire: true
    autoconfigure: true
    public: false
    bind:
      Sylius\Bundle\ResourceBundle\Controller\ParametersParserInterface: '@sylius.resource_controller.parameters_parser'
      $localeProvider: '@sylius.translation_locale_provider'
      $productVariantResolver: '@sylius.product_variant_resolver.default'
      $documentableRegistry: '@monsieurbiz.search.registry.documentable'
      $searchRequestsRegistry: '@monsieurbiz.search.registry.search_request'
      $configurationDirectory: '@=service("file_locator").locate("@MonsieurBizSyliusSearchPlugin/Resources/config/elasticsearch")'

  MonsieurBiz\SyliusSearchPlugin\:
    resource: '../../*'
    exclude: '../../{Entity,Migrations,Tests,Kernel.php}'

  MonsieurBiz\SyliusSearchPlugin\Form\Extension\:
    resource: '../../Form/Extension'
    tags:
      - { name: form.type_extension }

  MonsieurBiz\SyliusSearchPlugin\Generated\:
    resource: '../../../generated'

  # ES Client configuration
  MonsieurBiz\SyliusSearchPlugin\Search\ClientFactory:
    arguments:
      $config:
        host: '%env(ELASTICSEARCH_HOST)%'
        port: '%env(ELASTICSEARCH_PORT)%'

  MonsieurBiz\SyliusSearchPlugin\Repository\ProductAttributeRepository:
    arguments:
      $attributeRepository: '@sylius.repository.product_attribute'

  # Define our mapping provider
  JoliCode\Elastically\Mapping\YamlProvider: ~
  MonsieurBiz\SyliusSearchPlugin\Mapping\YamlWithLocaleProvider:
    decorates: JoliCode\Elastically\Mapping\YamlProvider
    arguments:
      $decorated: '@.inner'

  # Defines our registries
  monsieurbiz.search.registry.documentable:
    class: Sylius\Component\Registry\ServiceRegistry
    arguments:
      $className: '%monsieurbiz.search.model.documentable.interface%'
      $context: 'documentable'

  monsieurbiz.search.registry.search_request:
    class: Sylius\Component\Registry\ServiceRegistry
    arguments:
      $className: '%monsieurbiz.search.request.interface%'
      $context: 'documentable'

  # Define product attribute value readers
  MonsieurBiz\SyliusSearchPlugin\AutoMapper\ProductAttributeValueConfiguration:
    arguments:
      $productAttributeValueReaders: {
        default: '@MonsieurBiz\SyliusSearchPlugin\AutoMapper\ProductAttributeValueReader\DefaultReader',
        select: '@MonsieurBiz\SyliusSearchPlugin\AutoMapper\ProductAttributeValueReader\SelectReader',
        date: '@MonsieurBiz\SyliusSearchPlugin\AutoMapper\ProductAttributeValueReader\DateReader'
      }

  # Define aggregation builders
  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\MainTaxonAggregation:
    tags: { name: 'monsieurbiz.sarch.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\TaxonsAggregation:
    tags: { name: 'monsieurbiz.sarch.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\PriceAggregation:
    tags: { name: 'monsieurbiz.sarch.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\ProductAttributesAggregation:
    tags: { name: 'monsieurbiz.sarch.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\Aggregation\ProductOptionsAggregation:
    tags: { name: 'monsieurbiz.sarch.aggregation_builder' }

  MonsieurBiz\SyliusSearchPlugin\Search\Request\AggregationBuilder:
    arguments: [ !tagged_iterator { tag: 'monsieurbiz.sarch.aggregation_builder' } ]
